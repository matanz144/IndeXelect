import { getKeys, getValues, getEntries } from './utils';
export function _prepareData(data) {
    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide a valid JSON';
    try {
        return typeof data === 'string' ? JSON.parse(data) : data;
    }
    catch (_a) {
        throw new Error(MESSAGE_VALID_JSON_FAIL);
    }
}
export function _createJSONData(data, replacer, space) {
    if (replacer === void 0) { replacer = null; }
    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide valid JSON object';
    try {
        return JSON.stringify(data, replacer, space);
    }
    catch (_a) {
        throw new Error(MESSAGE_VALID_JSON_FAIL);
    }
}
export function _createTableMap(data) {
    return data.map(getEntries).reduce(function (tMap, rowKVs, rowIndex) {
        return rowKVs.reduce(function (map, kv) {
            var key = kv[0];
            var value = kv[1];
            var columnValues = map[key] || Array.from({ length: data.length }).map(function (_) { return ''; });
            columnValues[rowIndex] =
                (typeof value !== 'string' ? JSON.stringify(value) : value) || '';
            map[key] = columnValues;
            return map;
        }, tMap);
    }, Object.create(null));
}
export function createCSVData(data) {
    var tableMap = _createTableMap(data);
    var head = getKeys(tableMap).join(',') + '\r\n';
    var columns = getValues(tableMap).map(function (column) { return column.map(function (value) { return "\"" + value.replace(/\"/g, '""') + "\""; }); });
    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn.map(function (value, rowIndex) { return value + "," + column[rowIndex]; }); });
    return head + rows.join('\r\n');
}
export function _renderTableHTMLText(data) {
    var tableMap = _createTableMap(data);
    var head = getKeys(tableMap);
    var columns = getValues(tableMap).map(function (column) { return column.map(function (value) { return "<td>" + value + "</td>"; }); });
    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn.map(function (value, rowIndex) { return "" + value + column[rowIndex]; }); });
    return "\n    <table>\n      <thead><tr><th><b>" + head.join('</b></th><th><b>') + "</b></th></tr></thead>\n      <tbody><tr>" + rows.join('</tr><tr>') + "</tr></tbody>\n    </table>\n  ";
}
export function createXLSData(data) {
    return "\n    <html>\n      <head>\n        <meta charset=\"UTF-8\">\n      </head >\n      <body>\n        " + _renderTableHTMLText(data) + "\n      </body>\n    </html >\n  ";
}
